Node Package Mananger

Explicações:
	- NPM: 	Faz a instalações dos pacotes do site NPM

	- NPX:	1º faz a validação se existe o pacote especificado localmente if yes install senão tiver, faz other validação if exist
			globalmente if yes install senão tiver baixa diretamento do site NPM and install. Ex: npx NamePackage
			PS: Recomenda sempre usar o npx ao inves de instalar o package globalmente, pq assim sempre irá utilizar the latest version
			of the package, já installed globalmente sempre usa a version installed.

	- NVM: 	Node Version Manager. Um controlador de version para ter mais de um node instalado. Baixa ele em um project de github. Após instalar ele, para 
			usar baixar outras versões do node, use o comando:
				- nvm install NodeVersion 
				- nvm use NodeVersion:	Muda para a versão do node escolhida.
				- nvm uninstall NodeVersion: Excluir a versão especifica
				- nvm list: Listar os node instalados
				Sempre que mudar a versão do node e npm, usar o comando:
				- npm cache clean --force
				Porque quando for rodar o npm i, será usando o cache para mais agilidade, e como as versão são diferentes do npm, irá dar um erro. 
				Vai gerar a pasta node_module, but don't the file package-lock.json.							

	- No arquivo package.json, tem um o texto com nome: lockfileVersion. Se estiver como 1 é a versão antiga do npm, se estiver como 3 é a mais recente. 
	Se na sua maquina estiver usando o npm mais recente, consegue ler o lockfileVersion 1, já ao contrario não.

=================================================================================================================================================================
Commands NPM:
	- PS: Always that to install a package (npm i packageName) it será saved no angular.json on the array dependencies, and if quiser to save on the dev environment
	      usar (npm i --save-dev packageName) that será saved on the array devDependecies. 

	- npm install @angular/cli@version - g: Install the version especifica do angular cli.

	- npm uninstall @angular/cli -g: Unistall angular cli of the machine. o g do final significa install global

	- npm --version :	Show version npm
	
	- npm init --yes:	Cria o file package.json. O Yes é para instalar sem fazer varias perguntas de instalação. 
	
	- package.json:		The file package.json where have the package principais	do meu projeto.

	- npm i:			Run this commond (equals npm install) in the folder where estiver the file package.json, install all the packages listados in this 
						file, assim gerando the folder node_modules and file package-lock.json
						If to run this command and already exists the file package-lock.json, será incluide the version of package that be on the package-lock.json.
						if to run this command and already exists the path node_modules, será incluide the version of package that be on the node_modules.

	- npm update:		Serve for to update the packages of the project em que your versions were updated in the npm site. Always updated the versions of package
						seguindo a regra of the file package.json. Always to look the versions of packages of the file package-lock.json, 
						in him are the versions correct of the package of your project.  	

	- node_modules: 	It's the folder that contem todas as dependencias do meu projeto.

	- package-lock.json: Dependencias das dependencias of packages of file package.json. (Always the versions of packages serão as que estiverem on this file	
						 ignorando the versions of packages of file package.json)	

	- npm i PackageName: Install one package especifico. Modifica o package.json com o pacote instaldo. É criado no package.json a flag de Dependencies 
						 também é criado o arquivo package-lock.json. In this file mostra os pacotes e suas dependencias. Saved on the array dependencies.	

	- npm i PackageName --save-dev: If want to install only for ambiente de dev. Saved on the array devDependecies

	- npm i PackageName@version: Install version especifica. (There is npm i PackageName@latest, install last version of package).

	- npm uninstall PackageName: Remove a dependencia do project.

	- npm audit:		Verifica packages with vunerabilidade.

	- npm login:		For to upload the my package in the npm site. (OBS: You need have a acount in the npm site.)

	- npm publish:		For publish your package, always que fizer this command, esteja in the folder of your package.

	